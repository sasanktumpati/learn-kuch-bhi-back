"""Add video generation and update flashcard schemas

Revision ID: 572a1d1ba891
Revises: a120cfe310e4
Create Date: 2025-09-09 15:21:01.476582

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "572a1d1ba891"
down_revision: Union[str, Sequence[str], None] = "a120cfe310e4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "video_generation_requests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("video_id", sa.String(), nullable=False),
        sa.Column("original_prompt", sa.Text(), nullable=False),
        sa.Column("scene_file", sa.String(), nullable=False),
        sa.Column("scene_name", sa.String(), nullable=False),
        sa.Column("extra_packages", sa.JSON(), nullable=True),
        sa.Column("max_lint_batch_rounds", sa.Integer(), nullable=False),
        sa.Column("max_post_runtime_lint_rounds", sa.Integer(), nullable=False),
        sa.Column("max_runtime_fix_attempts", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "PROCESSING", "COMPLETED", "FAILED", name="generationstatus"
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_video_generation_requests_id"),
        "video_generation_requests",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_video_generation_requests_video_id"),
        "video_generation_requests",
        ["video_id"],
        unique=True,
    )
    op.create_table(
        "video_generation_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("request_id", sa.Integer(), nullable=False),
        sa.Column("video_id", sa.Integer(), nullable=True),
        sa.Column("success", sa.Boolean(), nullable=False),
        sa.Column("video_path", sa.String(), nullable=True),
        sa.Column("upgraded_prompt", sa.JSON(), nullable=True),
        sa.Column("generated_code", sa.Text(), nullable=True),
        sa.Column("lint_issues", sa.JSON(), nullable=True),
        sa.Column("runtime_errors", sa.JSON(), nullable=True),
        sa.Column("logs", sa.JSON(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["request_id"],
            ["video_generation_requests.id"],
        ),
        sa.ForeignKeyConstraint(
            ["video_id"],
            ["videos.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("request_id"),
    )
    op.create_index(
        op.f("ix_video_generation_results_id"),
        "video_generation_results",
        ["id"],
        unique=False,
    )
    op.create_table(
        "subtopic_flashcard_sets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("multi_result_id", sa.Integer(), nullable=False),
        sa.Column("flashcard_set_id", sa.Integer(), nullable=False),
        sa.Column("topic_name", sa.String(), nullable=False),
        sa.Column("subtopic_name", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["flashcard_set_id"],
            ["flashcard_sets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["multi_result_id"],
            ["multi_flashcards_results.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_subtopic_flashcard_sets_id"),
        "subtopic_flashcard_sets",
        ["id"],
        unique=False,
    )
    op.add_column(
        "flashcard_sets", sa.Column("original_prompt", sa.Text(), nullable=True)
    )
    op.add_column(
        "flashcard_sets",
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "PROCESSING", "COMPLETED", "FAILED", name="generationstatus"
            ),
            nullable=False,
        ),
    )
    # Convert TEXT to JSON with explicit casting
    op.execute(
        "ALTER TABLE flashcard_sets ALTER COLUMN tags TYPE JSON USING CASE WHEN tags IS NULL OR tags = '' THEN '[]'::json ELSE tags::json END"
    )
    op.add_column("flashcards", sa.Column("order_index", sa.Integer(), nullable=False))
    op.add_column(
        "multi_flashcards_results",
        sa.Column("original_prompt", sa.Text(), nullable=True),
    )
    op.add_column(
        "multi_flashcards_results",
        sa.Column("concurrency_setting", sa.Integer(), nullable=False),
    )
    op.add_column(
        "multi_flashcards_results",
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "PROCESSING", "COMPLETED", "FAILED", name="generationstatus"
            ),
            nullable=False,
        ),
    )
    op.add_column(
        "multi_flashcards_results",
        sa.Column("completed_at", sa.DateTime(), nullable=True),
    )
    op.drop_column("multi_flashcards_results", "sets_data")
    op.add_column(
        "topic_outlines", sa.Column("original_prompt", sa.Text(), nullable=True)
    )
    op.add_column(
        "topic_outlines",
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "PROCESSING", "COMPLETED", "FAILED", name="generationstatus"
            ),
            nullable=False,
        ),
    )
    # Convert TEXT to JSON with explicit casting
    op.execute(
        "ALTER TABLE topic_outlines ALTER COLUMN topics TYPE JSON USING topics::json"
    )
    op.add_column("videos", sa.Column("original_path", sa.String(), nullable=True))
    op.add_column("videos", sa.Column("file_size", sa.Integer(), nullable=True))
    op.add_column("videos", sa.Column("duration", sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("videos", "duration")
    op.drop_column("videos", "file_size")
    op.drop_column("videos", "original_path")
    # Convert JSON to TEXT with explicit casting
    op.execute(
        "ALTER TABLE topic_outlines ALTER COLUMN topics TYPE TEXT USING topics::text"
    )
    op.drop_column("topic_outlines", "status")
    op.drop_column("topic_outlines", "original_prompt")
    op.add_column(
        "multi_flashcards_results",
        sa.Column("sets_data", sa.TEXT(), autoincrement=False, nullable=False),
    )
    op.drop_column("multi_flashcards_results", "completed_at")
    op.drop_column("multi_flashcards_results", "status")
    op.drop_column("multi_flashcards_results", "concurrency_setting")
    op.drop_column("multi_flashcards_results", "original_prompt")
    op.drop_column("flashcards", "order_index")
    # Convert JSON to TEXT with explicit casting
    op.execute(
        "ALTER TABLE flashcard_sets ALTER COLUMN tags TYPE TEXT USING tags::text"
    )
    op.drop_column("flashcard_sets", "status")
    op.drop_column("flashcard_sets", "original_prompt")
    op.drop_index(
        op.f("ix_subtopic_flashcard_sets_id"), table_name="subtopic_flashcard_sets"
    )
    op.drop_table("subtopic_flashcard_sets")
    op.drop_index(
        op.f("ix_video_generation_results_id"), table_name="video_generation_results"
    )
    op.drop_table("video_generation_results")
    op.drop_index(
        op.f("ix_video_generation_requests_video_id"),
        table_name="video_generation_requests",
    )
    op.drop_index(
        op.f("ix_video_generation_requests_id"), table_name="video_generation_requests"
    )
    op.drop_table("video_generation_requests")
    # ### end Alembic commands ###
